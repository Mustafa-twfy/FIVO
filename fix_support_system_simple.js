// ุฅุตูุงุญ ูุธุงู ุงูุฏุนู ุงูููู - ุทุฑููุฉ ูุจุณุทุฉ
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = 'https://nzxmhpigoeexuadrnith.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im56eG1ocGlnb2VleHVhZHJuaXRoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA3MTE4MDcsImV4cCI6MjA2NjI4NzgwN30.2m_HhlKIlI1D6TN976zNJT-T8axXLAfUIOcOD1TPgUI';

const supabase = createClient(supabaseUrl, supabaseKey);

async function fixSupportSystem() {
  console.log('=== ุจุฏุงูุฉ ุฅุตูุงุญ ูุธุงู ุงูุฏุนู ุงูููู ===');
  
  try {
    // 1. ูุญุต ุงูุฌุฏูู ุงูุญุงูู
    console.log('1. ูุญุต ุงูุฌุฏูู ุงูุญุงูู...');
    
    const { data: currentData, error: currentError } = await supabase
      .from('support_messages')
      .select('*')
      .limit(1);
    
    if (currentError) {
      console.log('ุงูุฌุฏูู ุบูุฑ ููุฌูุฏ ุฃู ูุญุชุงุฌ ุฅุตูุงุญ:', currentError.message);
    } else {
      console.log('ุงูุฌุฏูู ููุฌูุฏุ ุฌุงุฑู ูุญุต ุงูุฃุนูุฏุฉ...');
      if (currentData && currentData.length > 0) {
        console.log('ุฃุนูุฏุฉ ุงูุฌุฏูู:', Object.keys(currentData[0]));
      }
    }
    
    // 2. ูุญุงููุฉ ุฅุฑุณุงู ุฑุณุงูุฉ ุชุฌุฑูุจูุฉ
    console.log('2. ุงุฎุชุจุงุฑ ุฅุฑุณุงู ุฑุณุงูุฉ ุชุฌุฑูุจูุฉ...');
    
    const testMessage = {
      user_type: 'driver',
      user_id: 1,
      message: 'ุฑุณุงูุฉ ุงุฎุชุจุงุฑ ูู ุงููุธุงู',
      sender: 'user',
      created_at: new Date().toISOString()
    };
    
    const { data: insertData, error: insertError } = await supabase
      .from('support_messages')
      .insert(testMessage)
      .select();
    
    if (insertError) {
      console.error('โ ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุฑุณุงูุฉ:', insertError);
      
      // ุฅุฐุง ูุงู ุงูุฎุทุฃ ุจุณุจุจ ุนุฏู ูุฌูุฏ ุงูุฃุนูุฏุฉุ ูุญุชุงุฌ ูุฅุตูุงุญ ุงูุฌุฏูู
      if (insertError.message.includes('user_type') || insertError.message.includes('user_id')) {
        console.log('ูุจุฏู ุฃู ุงูุฌุฏูู ูุญุชุงุฌ ุฅุตูุงุญ. ูุฑุฌู ุชุดุบูู ููู fix_support_system.sql ูู Supabase SQL Editor');
        console.log('ุฃู ูู ุจุฅูุดุงุก ุงูุฌุฏูู ูุฏููุงู ูู ููุญุฉ ุชุญูู Supabase');
      }
    } else {
      console.log('โ ุชู ุฅุฑุณุงู ุฑุณุงูุฉ ุชุฌุฑูุจูุฉ ุจูุฌุงุญ');
      
      // ุญุฐู ุงูุฑุณุงูุฉ ุงูุชุฌุฑูุจูุฉ
      if (insertData && insertData.length > 0) {
        await supabase
          .from('support_messages')
          .delete()
          .eq('id', insertData[0].id);
      }
    }
    
    // 3. ุฅุฏุฎุงู ุจูุงูุงุช ุชุฌุฑูุจูุฉ ุฅุฐุง ูุงู ุงูุฌุฏูู ูุนูู
    console.log('3. ุฅุฏุฎุงู ุจูุงูุงุช ุชุฌุฑูุจูุฉ...');
    
    const sampleData = [
      { user_type: 'driver', user_id: 1, message: 'ุฃุญุชุงุฌ ูุณุงุนุฏุฉ ูู ุชุญุฏูุซ ุจูุงูุงุชู ุงูุดุฎุตูุฉ', sender: 'user' },
      { user_type: 'driver', user_id: 1, message: 'ูุฑุญุจุงู! ูููููุง ูุณุงุนุฏุชู ูู ุชุญุฏูุซ ุจูุงูุงุชู. ูุง ูู ุงูุจูุงูุงุช ุงูุชู ุชุฑูุฏ ุชุญุฏูุซูุงุ', sender: 'admin' },
      { user_type: 'driver', user_id: 2, message: 'ูุดููุฉ ูู ุชุณุฌูู ุงูุฏุฎูู', sender: 'user' },
      { user_type: 'driver', user_id: 2, message: 'ุณูููู ุจูุญุต ูุดููุฉ ุชุณุฌูู ุงูุฏุฎูู. ูู ููููู ุฅุฎุจุงุฑูุง ุจุงูุฎุทุฃ ุงูุฐู ูุธูุฑ ููุ', sender: 'admin' },
      { user_type: 'store', user_id: 1, message: 'ุฃุญุชุงุฌ ูุณุงุนุฏุฉ ูู ุฅุถุงูุฉ ููุชุฌุงุช ุฌุฏูุฏุฉ', sender: 'user' },
      { user_type: 'store', user_id: 1, message: 'ูุฑุญุจุงู! ูููููุง ูุณุงุนุฏุชู ูู ุฅุถุงูุฉ ุงูููุชุฌุงุช. ูู ุชุฑูุฏ ุฏููู ููุตูุ', sender: 'admin' },
      { user_type: 'store', user_id: 2, message: 'ูุดููุฉ ูู ุชุญุฏูุซ ุนููุงู ุงููุชุฌุฑ', sender: 'user' },
      { user_type: 'store', user_id: 2, message: 'ุณูููู ุจูุณุงุนุฏุชู ูู ุชุญุฏูุซ ุงูุนููุงู. ูุง ูู ุงูุนููุงู ุงูุฌุฏูุฏุ', sender: 'admin' }
    ];
    
    let successCount = 0;
    for (const data of sampleData) {
      const { error: sampleError } = await supabase
        .from('support_messages')
        .insert({
          ...data,
          created_at: new Date().toISOString()
        });
      
      if (sampleError) {
        console.log(`ุชุญุฐูุฑ: ูุง ูููู ุฅุฏุฎุงู ุงูุฑุณุงูุฉ "${data.message}":`, sampleError.message);
      } else {
        successCount++;
      }
    }
    
    console.log(`โ ุชู ุฅุฏุฎุงู ${successCount} ูู ${sampleData.length} ุฑุณุงูุฉ ุชุฌุฑูุจูุฉ`);
    
    // 4. ุงุฎุชุจุงุฑ ุฌูุจ ุงูุฑุณุงุฆู
    console.log('4. ุงุฎุชุจุงุฑ ุฌูุจ ุงูุฑุณุงุฆู...');
    
    const { data: allMessages, error: fetchError } = await supabase
      .from('support_messages')
      .select('*')
      .order('created_at', { ascending: true });
    
    if (fetchError) {
      console.error('โ ุฎุทุฃ ูู ุฌูุจ ุงูุฑุณุงุฆู:', fetchError);
    } else {
      console.log(`โ ุชู ุฌูุจ ${allMessages?.length || 0} ุฑุณุงูุฉ ุจูุฌุงุญ`);
      
      // ุชุฌููุน ุงูุฑุณุงุฆู ุญุณุจ ุงููุณุชุฎุฏู
      const conversations = {};
      allMessages.forEach(msg => {
        const key = `${msg.user_type}-${msg.user_id}`;
        if (!conversations[key]) {
          conversations[key] = {
            user_type: msg.user_type,
            user_id: msg.user_id,
            messages: []
          };
        }
        conversations[key].messages.push(msg);
      });
      
      console.log(`๐ ุนุฏุฏ ุงููุญุงุฏุซุงุช: ${Object.keys(conversations).length}`);
      Object.keys(conversations).forEach(key => {
        const conv = conversations[key];
        console.log(`  - ${conv.user_type} (ID: ${conv.user_id}): ${conv.messages.length} ุฑุณุงูุฉ`);
      });
    }
    
    console.log('=== ุงูุชูุงุก ุฅุตูุงุญ ูุธุงู ุงูุฏุนู ุงูููู ===');
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ุนุงู ูู ุฅุตูุงุญ ุงููุธุงู:', error);
  }
}

// ุชุดุบูู ุงูุฅุตูุงุญ
fixSupportSystem(); 