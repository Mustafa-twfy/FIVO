#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('๐ค ุฑูุน ุฃููููุฉ ูุฎุตุตุฉ ููุชุทุจูู...');

// ุชุนูููุงุช ูููุณุชุฎุฏู
console.log(`
๐จ ูุงุณุชุฎุฏุงู ุฃููููุฉ ูุฎุตุตุฉ:

1. ุงุญูุธ ุงูุฃููููุฉ ุงูุฌุฏูุฏุฉ ุจุงุณู: assets/custom-icon.png
   - ุงูุญุฌู ุงููููุถู: 512x512 ุฃู 1024x1024
   - ุงูุตูุบุฉ: PNG
   - ุฎูููุฉ ุดูุงูุฉ ุฃู ููููุฉ

2. ุจุนุฏ ุญูุธ ุงููููุ ุดุบู ูุฐุง ุงูุณูุฑูุจุช ูุฑุฉ ุฃุฎุฑู

๐ ูุชุทูุจุงุช ุงูุฃููููุฉ:
- โ ุญุฌู ูุฑุจุน (ูุซู 512x512)
- โ ุตูุบุฉ PNG
- โ ุฌูุฏุฉ ุนุงููุฉ
- โ ุชุตููู ูุงุถุญ ูุจุณูุท
`);

const customIconPath = path.join(__dirname, '../assets/custom-icon.png');

if (fs.existsSync(customIconPath)) {
  console.log('โ ุชู ุงูุนุซูุฑ ุนูู assets/custom-icon.png');
  
  // ุงุณุชุฎุฏุงู ุงูุฃููููุฉ ุงููุฎุตุตุฉ
  function useCustomIcon() {
    const densities = ['mdpi', 'hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi'];
    let totalUpdated = 0;
    
    // ุงุณุชุจุฏุงู splashscreen_logo
    densities.forEach(density => {
      const targetPath = path.join(__dirname, `../android/app/src/main/res/drawable-${density}/splashscreen_logo.png`);
      
      try {
        fs.copyFileSync(customIconPath, targetPath);
        console.log(`โ ุชุญุฏูุซ drawable-${density}`);
        totalUpdated++;
      } catch (error) {
        console.log(`โ ุฎุทุฃ ูู ${density}: ${error.message}`);
      }
    });
    
    // ูุณุฎ ุฅูู mipmap
    densities.forEach(density => {
      const targetFolder = path.join(__dirname, `../android/app/src/main/res/mipmap-${density}`);
      
      if (!fs.existsSync(targetFolder)) {
        fs.mkdirSync(targetFolder, { recursive: true });
      }
      
      const targets = ['ic_launcher.png', 'ic_launcher_round.png', 'ic_launcher_foreground.png'];
      
      targets.forEach(target => {
        try {
          const targetPath = path.join(targetFolder, target);
          fs.copyFileSync(customIconPath, targetPath);
          totalUpdated++;
        } catch (error) {
          console.log(`โ ุฎุทุฃ ูู ูุณุฎ ${target}: ${error.message}`);
        }
      });
    });
    
    console.log(`\n๐ ุชู ุชุญุฏูุซ ${totalUpdated}/20 ููู`);
    
    if (totalUpdated > 15) {
      console.log('\n๐ ุชู ุชุญุฏูุซ ุงูุฃููููุฉ ุงููุฎุตุตุฉ ุจูุฌุงุญ!');
      console.log('๐ ุงุฏูุน ุงูุชุบููุฑุงุช: git add . && git commit -m "๐จ ุฃููููุฉ ูุฎุตุตุฉ" && git push');
    }
  }
  
  useCustomIcon();
} else {
  console.log('โณ ูู ุงูุชุธุงุฑ ุฑูุน assets/custom-icon.png...');
}
