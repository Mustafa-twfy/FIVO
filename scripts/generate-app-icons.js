/**
 * ูููุฏ ุฃููููุงุช ุงูุชุทุจูู
 * ูููู ุจุฅูุดุงุก ุฌููุน ุงูุฃุญุฌุงู ุงููุทููุจุฉ ูู ุตูุฑุฉ ูุงุญุฏุฉ
 */

const fs = require('fs');
const path = require('path');

// ุงูุชุญูู ูู ูุฌูุฏ ุงูุตูุฑุฉ ุงูุฃุณุงุณูุฉ
const checkMainIcon = () => {
  const mainIconPath = path.join(__dirname, '../assets/icon.png');
  
  if (!fs.existsSync(mainIconPath)) {
    console.log('โ ูู ูุชู ุงูุนุซูุฑ ุนูู assets/icon.png');
    console.log('๐ ูุฑุฌู ูุถุน ุฃููููุฉ ุงูุชุทุจูู ูู assets/icon.png ุจุญุฌู 1024x1024');
    return false;
  }
  
  console.log('โ ุชู ุงูุนุซูุฑ ุนูู ุงูุฃููููุฉ ุงูุฃุณุงุณูุฉ');
  return true;
};

// ุงูุชุญูู ูู ุฌููุน ุงูุฃููููุงุช ุงููุทููุจุฉ
const checkAllIcons = () => {
  const requiredIcons = [
    { name: 'icon.png', size: '500x500 ุฃู ุฃูุจุฑ', description: 'ุงูุฃููููุฉ ุงูุฑุฆูุณูุฉ' },
    { name: 'adaptive-icon.png', size: '500x500 ุฃู ุฃูุจุฑ', description: 'ุฃููููุฉ Android ุงูุชููููุฉ' },
    { name: 'favicon.png', size: '512x512', description: 'ุฃููููุฉ ุงูููุจ' },
    { name: 'splash-icon.png', size: 'ูุฎุตุต', description: 'ุดุงุดุฉ ุงูุจุฏุงูุฉ' }
  ];
  
  console.log('\n๐ ุงูุฃููููุงุช ุงููุทููุจุฉ:');
  console.log('='.repeat(50));
  
  requiredIcons.forEach((icon, index) => {
    const iconPath = path.join(__dirname, '../assets', icon.name);
    const exists = fs.existsSync(iconPath);
    const status = exists ? 'โ' : 'โ';
    
    console.log(`${index + 1}. ${status} ${icon.name}`);
    console.log(`   ๐ ุงูุญุฌู: ${icon.size}`);
    console.log(`   ๐ ุงููุตู: ${icon.description}`);
    console.log(`   ๐ ุงููุณุงุฑ: assets/${icon.name}`);
    console.log('');
  });
  
  return requiredIcons.every(icon => 
    fs.existsSync(path.join(__dirname, '../assets', icon.name))
  );
};

// ุฅูุดุงุก ูุณุฎ ุงุญุชูุงุทูุฉ
const createBackups = () => {
  const iconsToBackup = ['icon.png', 'adaptive-icon.png', 'favicon.png'];
  
  console.log('๐พ ุฅูุดุงุก ูุณุฎ ุงุญุชูุงุทูุฉ...');
  
  iconsToBackup.forEach(iconName => {
    const iconPath = path.join(__dirname, '../assets', iconName);
    const backupPath = path.join(__dirname, '../assets', `${iconName}.bak`);
    
    if (fs.existsSync(iconPath)) {
      try {
        fs.copyFileSync(iconPath, backupPath);
        console.log(`โ ุชู ุญูุธ ูุณุฎุฉ ุงุญุชูุงุทูุฉ ูู ${iconName}`);
      } catch (error) {
        console.log(`โ ูุดู ูู ุญูุธ ูุณุฎุฉ ุงุญุชูุงุทูุฉ ูู ${iconName}`);
      }
    }
  });
};

// ุนุฑุถ ูุนูููุงุช ุงูุชุทุจูู ุงูุญุงููุฉ
const showCurrentAppInfo = () => {
  const appJsonPath = path.join(__dirname, '../app.json');
  
  if (fs.existsSync(appJsonPath)) {
    const appJson = JSON.parse(fs.readFileSync(appJsonPath, 'utf8'));
    
    console.log('\n๐ฑ ูุนูููุงุช ุงูุชุทุจูู ุงูุญุงููุฉ:');
    console.log('='.repeat(30));
    console.log(`๐ ุงูุงุณู: ${appJson.expo.name}`);
    console.log(`๐ ุงููุนุฑู: ${appJson.expo.slug}`);
    console.log(`๐ฆ ุงูุฅุตุฏุงุฑ: ${appJson.expo.version}`);
    console.log(`๐จ ุงูุฃููููุฉ: ${appJson.expo.icon}`);
    console.log(`๐ซ ุดุงุดุฉ ุงูุจุฏุงูุฉ: ${appJson.expo.splash.image}`);
    
    if (appJson.expo.android && appJson.expo.android.adaptiveIcon) {
      console.log(`๐ค Android Adaptive: ${appJson.expo.android.adaptiveIcon.foregroundImage}`);
    }
    
    if (appJson.expo.web && appJson.expo.web.favicon) {
      console.log(`๐ Favicon: ${appJson.expo.web.favicon}`);
    }
  }
};

// ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ
const main = () => {
  console.log('๐จ ูููุฏ ุฃููููุงุช ุงูุชุทุจูู - ุณูุณู');
  console.log('='.repeat(40));
  
  // ุนุฑุถ ูุนูููุงุช ุงูุชุทุจูู
  showCurrentAppInfo();
  
  // ุฅูุดุงุก ูุณุฎ ุงุญุชูุงุทูุฉ
  createBackups();
  
  // ุงูุชุญูู ูู ุงูุฃููููุงุช
  const allIconsExist = checkAllIcons();
  
  if (allIconsExist) {
    console.log('โ ุฌููุน ุงูุฃููููุงุช ููุฌูุฏุฉ!');
    console.log('\n๐ ููููู ุงูุขู ุชุดุบูู ุงูุชุทุจูู:');
    console.log('   npx expo start');
  } else {
    console.log('\n๐ ุชุนูููุงุช ุฅุถุงูุฉ ุงูุฃููููุงุช:');
    console.log('='.repeat(35));
    console.log('1. ุงุญูุธ ุตูุฑุชู ูู PNG ุจุฎูููุฉ ุดูุงูุฉ');
    console.log('2. ุงุณุชุฎุฏู ุญุฌู 500x500 ุฃู ุฃูุจุฑ ููุฃููููุฉ ุงูุฑุฆูุณูุฉ');
    console.log('3. ุถุนูุง ูู ูุฌูุฏ assets/ ุจุงูุฃุณูุงุก ุงููุทููุจุฉ');
    console.log('4. ุดุบู ูุฐุง ุงูุณูุฑูุจุช ูุฑุฉ ุฃุฎุฑู ููุชุญูู');
    console.log('\n๐ก ูุตุงุฆุญ ููุชุตููู:');
    console.log('โข ุงุณุชุฎุฏู ุชุตููู ุจุณูุท ููุงุถุญ');
    console.log('โข ุชุฌูุจ ุงููุตูุต ุงูุตุบูุฑุฉ');
    console.log('โข ุงุฌุนู ุงูุฃููููุฉ ุชุจุฏู ุฌูุฏุฉ ุจุฃุญุฌุงู ุตุบูุฑุฉ');
    console.log('โข ููู adaptive iconุ ุงุฌุนู ุงูุนูุงุตุฑ ุงููููุฉ ูู ุงููุฑูุฒ');
  }
  
  console.log('\n' + '='.repeat(40));
};

// ุชุดุบูู ุงูุณูุฑูุจุช
if (require.main === module) {
  main();
}

module.exports = {
  checkMainIcon,
  checkAllIcons,
  createBackups,
  showCurrentAppInfo
};
